#
msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 12:18+0200\n"
"PO-Revision-Date: 2022-01-05 20:02+0800\n"
"Last-Translator: Aspirant Zhang <admin@aspirantzhang.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"

#: ../../Creational/FactoryMethod/README.rst:2
msgid "`Factory Method`__"
msgstr "`工厂方法`__"

#: ../../Creational/FactoryMethod/README.rst:5
msgid "Purpose"
msgstr "目的"

#: ../../Creational/FactoryMethod/README.rst:7
msgid ""
"The good point over the SimpleFactory is you can subclass it to implement different ways to create "
"objects."
msgstr ""
"相比 简单工厂模式（SimpleFactory）而言，工厂方法模式（Factory Method）可以通过延伸出子类，实现用不同的方法创建对象。"

#: ../../Creational/FactoryMethod/README.rst:10
msgid "For simple cases, this abstract class could be just an interface."
msgstr ""
"对于比较简单的情况，这个抽象类可能只是一个接口。"

#: ../../Creational/FactoryMethod/README.rst:12
msgid ""
"This pattern is a \"real\" Design Pattern because it achieves the "
"Dependency Inversion principle a.k.a the \"D\" in SOLID principles."
msgstr ""
"这是一个 \"真正\" 的设计模式，因为它遵循了\"依赖反转原则（Dependency Inversion Principle）\" 。"
"也就是 SOLID 原则中的\"D\"。"

#: ../../Creational/FactoryMethod/README.rst:15
msgid ""
"It means the FactoryMethod class depends on abstractions, not concrete "
"classes. This is the real trick compared to SimpleFactory or StaticFactory."
msgstr ""
"这意味着工厂方法实现的类依赖于类的抽象，而不是具体的类。"
"这也是 工厂方法模式 与 简单工厂模式 和 静态工厂模式 之间最重要的区别。"

#: ../../Creational/FactoryMethod/README.rst:20
msgid "UML Diagram"
msgstr "UML 图"

#: ../../Creational/FactoryMethod/README.rst:27
msgid "Code"
msgstr "代码"

#: ../../Creational/FactoryMethod/README.rst:29
msgid "You can also find this code on `GitHub`_"
msgstr "你可以在 `GitHub`_ 上找到这些代码"

#: ../../Creational/FactoryMethod/README.rst:74
msgid "Test"
msgstr "测试"
